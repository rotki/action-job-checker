name: Build
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõé
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup node env üèó
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: pnpm exec commitlint --from HEAD~1 --to HEAD --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: pnpm exec commitlint --from "${BASE_SHA}" --to "${HEAD_SHA}" --verbose
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõé
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup node env üèó
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Build and check
        run: pnpm run all

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Run
        uses: ./
        id: test
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          documentation_paths: |
            ./
          colibri_paths: |
            ./
          backend_paths: |
            ./
          frontend_paths: |
            ./
      - name: Echo plugin output
        run: |
          echo "test_environment: ${TEST_ENVIRONMENT}"
          echo "frontend_tasks: ${FRONTEND_TASKS}"
          echo "documentation_tasks: ${DOCUMENTATION_TASKS}"
          echo "colibri_tasks: ${COLIBRI_TASKS}"
          echo "backend_tasks: ${BACKEND_TASKS}"
          echo "e2e_tasks: ${E2E_TASKS}"
        env:
          TEST_ENVIRONMENT: ${{ steps.test.outputs.test_environment }}
          FRONTEND_TASKS: ${{ steps.test.outputs.frontend_tasks }}
          DOCUMENTATION_TASKS: ${{ steps.test.outputs.documentation_tasks }}
          COLIBRI_TASKS: ${{ steps.test.outputs.colibri_tasks }}
          BACKEND_TASKS: ${{ steps.test.outputs.backend_tasks }}
          E2E_TASKS: ${{ steps.test.outputs.e2e_tasks }}
